{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juann\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Udemy-React\\\\6_projeto_secret_world\\\\secret_w\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// CSS\nimport './App.css';\n// Components\nimport StartScreem from './components/StartScreem';\nimport Game from './components/Game';\nimport GameOver from './components/GameOver';\n//hooks\nimport { useCallback, useEffect, useState } from \"react\";\n//data\nimport { wordsList } from \"./data/Words\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stages = [{\n  id: 1,\n  name: \"start\"\n}, {\n  id: 2,\n  name: \"game\"\n}, {\n  id: 3,\n  name: \"end\"\n}];\nfunction App() {\n  _s();\n  const [gameStage, setGameStage] = useState(stages[0].name);\n  const [words] = useState(wordsList);\n  const [picedkWord, setPicedkWord] = useState(\"\");\n  const [pickedCategory, setPickedCategory] = useState(\"\");\n  const [letters, setLetters] = useState([]);\n  const pickWorldAndCategories = () => {\n    //pick a random category\n    const categories = Object.keys(words);\n    const category = categories[Math.floor(Math.random() * Object.keys(categories).length)];\n    console.log(category);\n\n    //pick a random word\n    const word = words[category][Math.floor(Math.random() * words[category].length)];\n    console.log(word);\n    return {\n      word,\n      category\n    };\n  };\n\n  // Startando Secret World game\n  const startGame = () => {\n    //Picked word and picked category\n    const {\n      word,\n      category\n    } = pickWorldAndCategories();\n\n    // criando um array com as letras\n    let wordLetters = word.split(\"\");\n    wordLetters = wordLetters.map(l => l.toLowerCase());\n    console.log(word, category);\n    console.log(wordLetters);\n\n    // fill states\n    setPicedkWord(word);\n    setPickedCategory(category);\n    setLetters(letters);\n    setGameStage(stages[1].name);\n  };\n  //Finalizando com Game Over\n  const verifyLetter = () => {\n    setGameStage(stages[2].name);\n  };\n  //Retry game\n  const retry = () => {\n    setGameStage(stages[0].name);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [gameStage === 'start' && /*#__PURE__*/_jsxDEV(StartScreem, {\n      startGame: startGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 33\n    }, this), gameStage === 'game' && /*#__PURE__*/_jsxDEV(Game, {\n      verifyLetter: verifyLetter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 32\n    }, this), gameStage === 'end' && /*#__PURE__*/_jsxDEV(GameOver, {\n      retry: retry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4/8IAku/muB+IirVHyAagUhC/2M=\");\n_c = App;\n;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["StartScreem","Game","GameOver","useCallback","useEffect","useState","wordsList","stages","id","name","App","gameStage","setGameStage","words","picedkWord","setPicedkWord","pickedCategory","setPickedCategory","letters","setLetters","pickWorldAndCategories","categories","Object","keys","category","Math","floor","random","length","console","log","word","startGame","wordLetters","split","map","l","toLowerCase","verifyLetter","retry"],"sources":["C:/Users/juann/OneDrive/Área de Trabalho/Udemy-React/6_projeto_secret_world/secret_w/src/App.js"],"sourcesContent":["// CSS\nimport './App.css';\n// Components\nimport StartScreem from './components/StartScreem';\nimport Game from './components/Game'\nimport GameOver from './components/GameOver';\n//hooks\nimport { useCallback, useEffect, useState } from \"react\";\n//data\nimport { wordsList } from \"./data/Words\";\n\nconst stages = [\n  {id: 1, name: \"start\"},\n  {id: 2, name: \"game\"},\n  {id: 3, name: \"end\"},\n];\n\nfunction App() {\n\n  const [gameStage, setGameStage] = useState(stages[0].name);\n  const [words] = useState(wordsList);\n\n\n  const [picedkWord, setPicedkWord] = useState(\"\");\n  const [pickedCategory, setPickedCategory] = useState(\"\");\n  const [letters, setLetters] = useState([]);\n\n  const pickWorldAndCategories = () => {\n    //pick a random category\n    const categories = Object.keys(words);\n    const category = categories[Math.floor(Math.random() * Object.keys(categories).length)];      \n\n    console.log(category);\n\n    //pick a random word\n    const word = words[category][Math.floor(Math.random() * words[category].length)]\n\n    console.log(word)\n\n    return{word, category};\n  }\n\n  \n\n  // Startando Secret World game\n  const startGame = () => {\n    //Picked word and picked category\n    const { word, category } = pickWorldAndCategories();\n    \n\n    // criando um array com as letras\n    let wordLetters = word.split(\"\");\n\n    wordLetters = wordLetters.map((l) => l.toLowerCase())\n\n    console.log(word, category);\n    console.log(wordLetters);\n\n    // fill states\n    setPicedkWord(word);\n    setPickedCategory(category);\n    setLetters(letters);\n\n    setGameStage(stages[1].name)\n  }\n  //Finalizando com Game Over\n  const verifyLetter = () => {\n    setGameStage(stages[2].name);\n  };\n  //Retry game\n  const retry = () => {\n    setGameStage(stages[0].name);\n  }\n\n  return (\n    <div className=\"App\">\n      {gameStage === 'start' && <StartScreem startGame={startGame}/>}\n      {gameStage === 'game' && <Game verifyLetter={verifyLetter}/>}\n      {gameStage === 'end' && <GameOver retry={retry}/>}\n    </div>\n\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}