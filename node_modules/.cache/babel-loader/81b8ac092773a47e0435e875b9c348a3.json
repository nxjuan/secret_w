{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juann\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Udemy-React\\\\6_projeto_secret_world\\\\secret_w\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// CSS\nimport './App.css';\n// Components\nimport StartScreem from './components/StartScreem';\nimport Game from './components/Game';\nimport GameOver from './components/GameOver';\n//hooks\nimport { useState, useCallback, useEffect } from \"react\";\n//data\nimport { wordsList } from \"./data/Words\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stages = [{\n  id: 1,\n  name: \"start\"\n}, {\n  id: 2,\n  name: \"game\"\n}, {\n  id: 3,\n  name: \"end\"\n}];\nfunction App() {\n  _s();\n  const [gameStage, setGameStage] = useState(stages[0].name);\n  const [words] = useState(wordsList);\n  const [picedkWord, setPicedkWord] = useState(\"\");\n  const [pickedCategory, setPickedCategory] = useState(\"\");\n  const [letters, setLetters] = useState([]);\n  const [guessedLetters, setGuessedLetters] = useState([]);\n  const [wrongLetters, setWrongLetters] = useState([]);\n  const [guesses, setGuesses] = useState(5);\n  const [score, setScore] = useState(0);\n  const pickWorldAndCategories = () => {\n    //pick a random category\n    const categories = Object.keys(words);\n    const category = categories[Math.floor(Math.random() * Object.keys(categories).length)];\n    console.log(category);\n\n    //pick a random word\n    const word = words[category][Math.floor(Math.random() * words[category].length)];\n    console.log(word);\n    return {\n      word,\n      category\n    };\n  };\n\n  // Startando Secret World game\n  const startGame = () => {\n    //Picked word and picked category\n    const {\n      word,\n      category\n    } = pickWorldAndCategories();\n\n    // criando um array com as letras\n    let wordLetters = word.split(\"\");\n    wordLetters = wordLetters.map(l => l.toLowerCase());\n    console.log(word, category);\n    console.log(wordLetters);\n\n    // fill states\n    setPicedkWord(word);\n    setPickedCategory(category);\n    setLetters(wordLetters);\n    setGameStage(stages[1].name);\n  };\n  //Finalizando com Game Over\n  const verifyLetter = letter => {\n    const normalizedLetter = letter.toLowerCase();\n    //verificando se a letra já está sendo ultilizada\n    if (guessedLetters.includes(normalizedLetter) || wrongLetters.includes(normalizedLetter)) {\n      return;\n    }\n\n    //removendo chance ao errar\n    if (letters.includes(normalizedLetter)) {\n      setGuessedLetters(actualGuessedLetters => [...actualGuessedLetters, normalizedLetter]);\n    } else {\n      setWrongLetters(actualWrongLetters => [...actualWrongLetters, normalizedLetter]);\n      setGuesses(actualGuesses => actualGuesses - 1);\n    }\n  };\n  const clearLetterStates = () => {\n    setGuessedLetters([]);\n    setWrongLetters([]);\n  };\n  useEffect(() => {\n    if (guesses <= 0) {\n      //resetando os states ao fim de jogo\n      clearLetterStates();\n      setGameStage(stages[2].name);\n    }\n  }, [guesses]);\n\n  //Retry game\n  const retry = () => {\n    setScore(0);\n    setGuesses(0);\n    setGameStage(stages[0].name);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [gameStage === 'start' && /*#__PURE__*/_jsxDEV(StartScreem, {\n      startGame: startGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 33\n    }, this), gameStage === 'game' && /*#__PURE__*/_jsxDEV(Game, {\n      verifyLetter: verifyLetter,\n      picedkWord: picedkWord,\n      pickedCategory: pickWorldAndCategories,\n      letters: letters,\n      guessedLetters: guessedLetters,\n      wrongLetters: wrongLetters,\n      guesses: guesses,\n      score: score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 32\n    }, this), gameStage === 'end' && /*#__PURE__*/_jsxDEV(GameOver, {\n      retry: retry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"L+hnmEo6eAch/FDgYtvHmoh+5Zo=\");\n_c = App;\n;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["StartScreem","Game","GameOver","useState","useCallback","useEffect","wordsList","stages","id","name","App","gameStage","setGameStage","words","picedkWord","setPicedkWord","pickedCategory","setPickedCategory","letters","setLetters","guessedLetters","setGuessedLetters","wrongLetters","setWrongLetters","guesses","setGuesses","score","setScore","pickWorldAndCategories","categories","Object","keys","category","Math","floor","random","length","console","log","word","startGame","wordLetters","split","map","l","toLowerCase","verifyLetter","letter","normalizedLetter","includes","actualGuessedLetters","actualWrongLetters","actualGuesses","clearLetterStates","retry"],"sources":["C:/Users/juann/OneDrive/Área de Trabalho/Udemy-React/6_projeto_secret_world/secret_w/src/App.js"],"sourcesContent":["// CSS\nimport './App.css';\n// Components\nimport StartScreem from './components/StartScreem';\nimport Game from './components/Game'\nimport GameOver from './components/GameOver';\n//hooks\nimport {  useState, useCallback, useEffect } from \"react\";\n//data\nimport { wordsList } from \"./data/Words\";\n\nconst stages = [\n  {id: 1, name: \"start\"},\n  {id: 2, name: \"game\"},\n  {id: 3, name: \"end\"},\n];\n\nfunction App() {\n\n  const [gameStage, setGameStage] = useState(stages[0].name);\n  const [words] = useState(wordsList);\n\n\n  const [picedkWord, setPicedkWord] = useState(\"\");\n  const [pickedCategory, setPickedCategory] = useState(\"\");\n  const [letters, setLetters] = useState([]);\n\n  const [guessedLetters, setGuessedLetters] = useState([])\n  const [wrongLetters, setWrongLetters] = useState([])\n  const [guesses, setGuesses] = useState(5)\n  const [score, setScore] = useState(0)\n\n\n  const pickWorldAndCategories = () => {\n    //pick a random category\n    const categories = Object.keys(words);\n    const category = categories[Math.floor(Math.random() * Object.keys(categories).length)];      \n\n    console.log(category);\n\n    //pick a random word\n    const word = words[category][Math.floor(Math.random() * words[category].length)]\n\n    console.log(word)\n\n    return{word, category};\n  }\n\n  \n\n  // Startando Secret World game\n  const startGame = () => {\n    //Picked word and picked category\n    const { word, category } = pickWorldAndCategories();\n    \n\n    // criando um array com as letras\n    let wordLetters = word.split(\"\");\n\n    wordLetters = wordLetters.map((l) => l.toLowerCase())\n\n    console.log(word, category);\n    console.log(wordLetters);\n\n    // fill states\n    setPicedkWord(word);\n    setPickedCategory(category);\n    setLetters(wordLetters);\n\n    setGameStage(stages[1].name)\n  }\n  //Finalizando com Game Over\n  const verifyLetter = (letter) => {\n\n    const normalizedLetter = letter.toLowerCase()\n    //verificando se a letra já está sendo ultilizada\n    if(guessedLetters.includes(normalizedLetter) || wrongLetters.includes(normalizedLetter)){\n      return;\n    }\n\n    //removendo chance ao errar\n    if(letters.includes(normalizedLetter)){\n      setGuessedLetters((actualGuessedLetters) => [\n        ...actualGuessedLetters,\n        normalizedLetter,\n      ])\n    }else{\n      setWrongLetters((actualWrongLetters) => [\n        ...actualWrongLetters,\n        normalizedLetter,\n      ]) \n\n      setGuesses((actualGuesses) => actualGuesses - 1)\n\n    }\n  };\n\n  const clearLetterStates = () => {\n    setGuessedLetters([])\n    setWrongLetters([])\n  }\n\n  useEffect(() => {\n\n    if(guesses <= 0){\n      //resetando os states ao fim de jogo\n      clearLetterStates()\n\n\n      setGameStage(stages[2].name);\n    }\n\n  }, [guesses])\n\n  //Retry game\n  const retry = () => {\n    setScore(0);\n    setGuesses(0)\n    setGameStage(stages[0].name);\n  }\n\n  return (\n    <div className=\"App\">\n      {gameStage === 'start' && <StartScreem startGame={startGame}/>}\n      {gameStage === 'game' && <Game \n        verifyLetter={verifyLetter}\n        picedkWord={picedkWord}\n        pickedCategory={pickWorldAndCategories}\n        letters={letters}\n        guessedLetters={guessedLetters}\n        wrongLetters={wrongLetters}\n        guesses={guesses}\n        score={score}\n      />}\n      {gameStage === 'end' && <GameOver retry={retry}/>}\n    </div>\n\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}